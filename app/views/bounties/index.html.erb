<% title "Bounties", @product.name %>
<% activate_nav! :bounties %>
<%= track 'product.wips.viewed', ProductAnalyticsSerializer.new(@product) %>

<%= react_component 'BountyIndex', {
  initialBounties: FilterWipsQuery.call(@product.tasks, current_user, { state: 'open', sort: 'priority' }).page(1).map { |t| BountySerializer.new(t) },
  tags: Wip::Tag.suggested_tags,
  creators: User.joins(:wips).where(wips: { type: 'Task', product_id: @product }).uniq.order('username ASC').map { |u| UserSerializer.new(u) },
  workers: User.joins(wip_workers: :wip).where(wips: { type: 'Task', product_id: @product }).uniq.order('username ASC').map { |u| UserSerializer.new(u) },
  product: ProductSerializer.new(@product),
  pages: @product.tasks.page(1).total_pages,
  url: product_wips_path(@product),
  maxOffer: (6 * @product.average_bounty).round(-4),
  averageBounty: @product.average_bounty,
  coinsMinted: @product.coins_minted,
  profitLastMonth: @product.profit_last_month,
  steps: BountyGuidance::Valuations.suggestions(@product),
} %>
