<% title @chat_room.name %>
<% activate_nav! :community if @chat_room.product.nil? %>
<%= track 'product.chat.viewed', ProductSerializer.new(@product, scope: current_user) %>

<%= render partial: 'shared/navbar', locals: { bounties_link: true } %>

<div class="modal fade"
     id="create-task"
     tabindex="-1"
     role="dialog"
     aria-labelledby="createTask"
     aria-hidden="true">
</div>

<style>
.chat-wrapper {
  background-color: white;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
</style>

<style>

  .nc {
    background: white;
    position: absolute;
    top: 48px;
    left: 0;
    right: 0;
    bottom: 0;


    display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox;      /* TWEENER - IE 10 */
    display: -webkit-flex;     /* NEW - Chrome */
    display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */

    justify-content: center;
  }

  .nc-channels {
    background-color: #333;
    color: white;

    min-width: 220px;
    max-width: 220px;

    padding: 10px;
    overflow-y: scroll;
  }

  .nc-messages {
    width: 100%;

    display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
    display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
    display: -ms-flexbox;      /* TWEENER - IE 10 */
    display: -webkit-flex;     /* NEW - Chrome */
    display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */

    -webkit-flex-direction: column;
    -moz-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;


    flex-wrap: nowrap;
    justify-content: flex-end;
    align-content: stretch;
    align-items: stretch;

    flex-grow: 1;
    -webkit-flex-grow: 1;
  }

  .nc-messages-content {
    overflow-y: scroll;
    flex-grow: 1;
    -webkit-flex-grow: 1;
  }

  .nc-messages-footer {
    min-height: 80px;
    padding: 10px;
  }

</style>


<div class="chat-wrapper">

  <div class="nc">

    <div class="nc-channels">

      <div class="mb2">
        <h6 class="mt0 mb2">Channels</h6>
        <% @rooms.each do |chan| %>
          <a class="block" href="<%= chat_room_path(chan) %>">#<%= chan.slug %></a>
        <% end %>
      </div>

      <div class="mb2">
        <div class="js-members"></div>
      </div>
    </div>

    <div class="nc-messages">
      <div class="nc-messages-content">

        <div class="chat js-chat">
          <div class="p2">
            <div class="align-center mb2">
              <a class="btn btn-default btn-block btn-sm js-chat-load-more" href="<%= api_chat_room_comments_path(@chat_room, format: 'json') %>" style="margin-top: 36px;">Load more</a>
            </div>

            <div class="js-activity-stream"></div>
          </div>
        </div>

      </div>

      <div class="nc-messages-footer">

        <div class="js-chat-actions">
          <%= render 'discussions/chat_box' %>
         </div>

      </div>

    </div>
  </div>

</div>


<% content_for :javascript do %>
  <script>
    <% if @chat_room.product %>
      app.product = new Product(<%= json @chat_room.product, scope: current_user %>);
    <% end %>
    app.chatRoom = { id: '<%= @chat_room.key %>' }

    <% if signed_in? %>
      app.chatRoom.readRaptorChatPath = '<%== ReadraptorTracker.new(@chat_room.key, current_user.id).url %>';
    <% end %>

    $(document).ready(function() {
      var activityStream = new ActivityStream(<%=
        json @activity_stream.map {|a, _|
          ActivitySerializer.new(a, scope: current_user)
        }
      %>);
      activityStream.url = '<%= api_chat_room_comments_path(@chat_room) %>';
      activityStream.id = '<%= @chat_room.id %>'
      activityStream.product = new Product(<%= json @product, scope: current_user %>);

      var activityStreamView = new ActivityStreamView({
        el: $('.js-activity-stream'),
        collection: activityStream,
        subjectId: '<%= @chat_room.wip_id %>'
      });

      pusher.connection.bind('connected', function() {
        activityStream.listenForRemote(pusher, pusher.connection);

        window.presenceChannel = pusher.subscribe('presence-' + activityStream.channelName())

        $('.js-members').each(function() {
          var component = React.renderComponent(
            MembersView({
              channel: presenceChannel,
              url: '<%= api_chat_room_users_path(@chat_room) %>'
            }),
            this
          );
        });

        var alreadyJoined = {};

        presenceChannel.bind(
          'pusher:member_added',
          function memberJoined(member) {
            // Slight hack to prevent multiple join messages
            // for one person
            if (alreadyJoined[member.id] === 1) {
              return;
            }

            alreadyJoined[member.id] = 1;

            var activity = new Activity({
              id: member.id + rand(10000),
              actor: member.info,
              // TODO: change 'type' to 'verb'
              type: 'activities/join',
              created: moment().toISOString()
            });

            activityStream.add(activity);
          }
        );
      });

      var chatView = new ChatView({
        el: $('.js-chat'),
        collection: activityStream,
        scrollContainer: $('.nc-messages-content'),
        scrollPadding: 168
      });

      window.activityStream = activityStream;
      window.activityStreamView = activityStreamView;
      window.chatView = chatView;

      activityStreamView.render();
      chatView.render();
      chatView.scrollToLatestActivity();
      $(window).load(function() {
        delay(1, chatView.scrollToLatestActivity);
      });
    });
  </script>
<% end %>
